version: "3.9"

services:
  postgres:
    hostname: postgres
    image: postgres:alpine
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5435:5432"
    restart: on-failure
    volumes:
      - ./.data/docker-postgres:/var/lib/postgresql/data
    networks:
      - aviation-client
  pgweb:
    container_name: pgweb  # optional
    restart: always  # optional
    image: sosedoff/pgweb
    ports:
      - "8081:8081"
    links:
      - postgres:postgres  # my database container is called postgres, not db
    depends_on:
      - postgres
    environment: &env
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: trust

  redis:
    container_name: redis
    hostname: redis
    image: redis:latest
    command: redis-server --port 6380
    ports:
      - "6380:6380"
    expose:
      - "6380"
#    environment:
#      REDIS_HOST: ${REDIS_HOST}
#      REDIS_PASSWORD: ${REDIS_PASSWORD}
#      REDIS_DB: ${REDIS_DB}
    volumes:
      - ./.data/docker-redis:/var/lib/redis/data

    networks:
      - aviation-client

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    platform: linux/amd64
    environment:
      - REDIS_HOSTS=local:redis:6380
      - HTTP_USER=root
      - HTTP_PASSWORD=qwerty
    ports:
      - "8082:8081"
    expose:
      - "8082"
    networks:
      - aviation-client
    depends_on:
      - redis

#  server:
#    build: .
#    networks:
#      - gollama-assistant
#    depends_on:
#      - postgres
#      - redis
#    environment:
#      LOG_FORMAT: json
#      DB_HOST: postgres
#      REDIS_HOST: redis
#      ADDR: "0.0.0.0:6969"
#    ports:
#      - 6969:6969

networks:
  aviation-client:
